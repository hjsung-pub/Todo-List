{"ast":null,"code":"var _jsxFileName = \"/Users/hjsung/Github/React_trial/todo-list/src/App.js\";\nimport React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport TodoItemList from './components/TodoItemList';\nimport Form from './components/Form';\nimport Palette from './components/Palette';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 3;\n    this.state = {\n      input: '',\n      todos: [{\n        id: 0,\n        text: '리액트 공부',\n        checked: false\n      }, {\n        id: 1,\n        text: '리액트 적용',\n        checked: true\n      }, {\n        id: 2,\n        text: '리액트 소개',\n        checked: false\n      }],\n      color: ['#343a40', '#f03e3e', '#12b886', '#228ae6']\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.handleCreate = () => {\n      const {\n        input,\n        todos\n      } = this.state;\n\n      if (input === '') {\n        alert(\"내요을 입력해주세요\");\n        return;\n      }\n\n      this.setState({\n        input: '',\n        todos: todos.concat({\n          id: this.id++,\n          text: input,\n          checked: false\n        })\n      });\n    };\n\n    this.handleKeyPress = e => {\n      if (e.key === 'Enter') {\n        this.handleCreate();\n      }\n    };\n\n    this.handleToggle = id => {\n      const {\n        todos\n      } = this.state; // 파라미터로 받은 id를 가지고 몇번째 아이템인지 찾습니다. \n\n      const index = todos.findIndex(todo => todo.id === id);\n      const selected = todos[index]; //선택한 객체\n\n      const nextTodos = [...todos]; //배열복사\n      //기존의 값들을 복사하고, checked값을 덮어쓰기\n\n      nextTodos[index] = { ...selected,\n        checked: !selected.checked\n      };\n      this.setState({\n        todos: nextTodos\n      });\n    };\n\n    this.handleRomve = id => {\n      const {\n        todos\n      } = this.state;\n      this.setState({\n        todos: todos.filter(todo => todo.id !== id)\n      });\n    };\n  }\n\n  render() {\n    const {\n      input,\n      todos,\n      color\n    } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRomve\n    } = this;\n    return /*#__PURE__*/_jsxDEV(TodoListTemplate, {\n      form: /*#__PURE__*/_jsxDEV(Form, {\n        value: input,\n        onKeyPress: handleKeyPress,\n        onChange: handleChange,\n        onCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this),\n      palette: /*#__PURE__*/_jsxDEV(Palette, {\n        color: color,\n        onSelect: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(TodoItemList, {\n        todos: todos,\n        onToggle: handleToggle,\n        onRemove: handleRomve\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hjsung/Github/React_trial/todo-list/src/App.js"],"names":["React","Component","TodoListTemplate","TodoItemList","Form","Palette","App","id","state","input","todos","text","checked","color","handleChange","e","setState","target","value","handleCreate","alert","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","nextTodos","handleRomve","filter","render","handleSelect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport TodoItemList from './components/TodoItemList';\nimport Form from './components/Form';\nimport Palette from './components/Palette';\nimport './index.css';\n\nclass App extends Component {\n\n  id=3 //이미 0,1,2가 존재하므로 3으로 설정\n\n  state={\n    input: '',\n    todos: [\n      {id:0, text:'리액트 공부', checked:false},\n      {id:1, text:'리액트 적용', checked:true},\n      {id:2, text:'리액트 소개', checked:false}\n    ],\n    color:['#343a40', '#f03e3e', '#12b886', '#228ae6']\n  }\n\n  handleChange = (e) =>{\n    this.setState({\n      input:e.target.value\n    });\n  }\n\n  handleCreate = () =>{\n    const {input, todos} = this.state;\n    \n    if(input === '') { alert(\"내요을 입력해주세요\"); return}\n    this.setState({\n      input:'',\n      todos:todos.concat({\n        id : this.id++,\n        text: input,\n        checked : false\n      })\n    });\n  }\n\n  handleKeyPress = (e) =>{\n    if(e.key === 'Enter'){\n      this.handleCreate();\n    }\n  }\n\n  handleToggle = (id) =>{\n    const {todos} = this.state;\n\n    // 파라미터로 받은 id를 가지고 몇번째 아이템인지 찾습니다. \n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index]; //선택한 객체\n\n    const nextTodos = [...todos]; //배열복사\n    \n    //기존의 값들을 복사하고, checked값을 덮어쓰기\n    nextTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    };\n    \n    this.setState({\n      todos : nextTodos\n    })\n  }\n\n  handleRomve = (id) => {\n    const {todos} = this.state;\n    this.setState({\n      todos : todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  render(){\n    const {input, todos, color} = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRomve\n    } = this;\n\n    return (\n      <TodoListTemplate form={(\n      <Form\n        value={input}\n        onKeyPress={handleKeyPress}\n        onChange={handleChange}\n        onCreate={handleCreate}\n      />\n      )} palette= {(\n      <Palette\n        color={color}\n        onSelect={handleSelect}\n      />\n      )}>\n        <TodoItemList todos={todos} onToggle={handleToggle} onRemove={handleRomve}/>\n      </TodoListTemplate>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}