{"ast":null,"code":"var _jsxFileName = \"/Users/hjsung/Github/Todo-List-react/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport './TodoItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TodoItem extends Component {\n  //성능 최적화 , 컴포넌트가 리렌더링을 할지 정해줌\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.props.todos !== nextProps.todos;\n  }\n\n  render() {\n    //text : todo내용, checked: 체크박스 상태, id:todo 고유아이디, onToggle:체크박스를 키고 끄는 함수, onRemove:아이템을 삭제시키는 함수\n    const {\n      text,\n      checked,\n      id,\n      color,\n      onToggle,\n      onRemove\n    } = this.props;\n    console.log('con', onToggle);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-item\",\n      onClick: () => onToggle(id),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-remove\",\n        onClick: e => {\n          e.stopPropagation(); //onToggle이 실행되지 않도록 함\n\n          onRemove(id);\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color\n        },\n        className: `todo-text ${checked && 'checked'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 86\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), \" \", checked && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-mark\",\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/hjsung/Github/Todo-List-react/src/components/TodoItem.js"],"names":["React","Component","TodoItem","shouldComponentUpdate","nextProps","nextState","props","todos","render","text","checked","id","color","onToggle","onRemove","console","log","e","stopPropagation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;AAEA,eAAe,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC1C;AACAE,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,WAAO,KAAKC,KAAL,CAAWC,KAAX,KAAqBH,SAAS,CAACG,KAAtC;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBC,MAAAA,EAAhB;AAAoBC,MAAAA,KAApB;AAA2BC,MAAAA,QAA3B;AAAqCC,MAAAA;AAArC,QAAiD,KAAKR,KAA5D;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBH,QAAlB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAG,MAAKA,QAAQ,CAACF,EAAD,CAAlD;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAA6C,QAAA,OAAO,EAAGM,CAAD,IAAM;AACxDA,UAAAA,CAAC,CAACC,eAAF,GADwD,CACnC;;AACrBJ,UAAAA,QAAQ,CAACH,EAAD,CAAR;AAAa,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA;AAAD,SAAZ;AAAqB,QAAA,SAAS,EAAG,aAAYF,OAAO,IAAI,SAAU,EAAlE;AAAA,+BAAqE;AAAA,oBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA;AAArE;AAAA;AAAA;AAAA;AAAA,cAJJ,OAMQC,OAAO,iBAAK;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANpB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AArB2C","sourcesContent":["import React, { Component } from 'react'\nimport './TodoItem.css'\n\nexport default class TodoItem extends Component {\n      //성능 최적화 , 컴포넌트가 리렌더링을 할지 정해줌\n      shouldComponentUpdate(nextProps, nextState) {\n        return this.props.todos !== nextProps.todos;\n    }\n\n    render() {\n        //text : todo내용, checked: 체크박스 상태, id:todo 고유아이디, onToggle:체크박스를 키고 끄는 함수, onRemove:아이템을 삭제시키는 함수\n        const {text, checked, id, color, onToggle, onRemove} = this.props;\n        console.log('con',onToggle)\n        return (\n            <div className=\"todo-item\" onClick={ ()=> onToggle(id)}>\n                <button type=\"button\" className=\"btn-remove\" onClick={(e)=> {\n                    e.stopPropagation(); //onToggle이 실행되지 않도록 함\n                    onRemove(id)}}>&times;</button>\n                <div style={{color}} className={`todo-text ${checked && 'checked'}`}><div>{text}</div></div> {/* \"todo-text\" + check && 'checked' 와 동일 */}\n                {\n                    checked && (<div className=\"check-mark\">✓</div>)\n                }\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}