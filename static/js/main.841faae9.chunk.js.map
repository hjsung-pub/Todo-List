{"version":3,"sources":["components/TodoListTemplate.js","components/TodoItem.js","components/TodoItemList.js","components/Form.js","components/Palette.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListTemplate","form","children","palette","className","class","TodoItem","this","props","text","checked","id","color","onToggle","onRemove","onClick","type","e","stopPropagation","style","Component","TodoItemList","nextProps","nextState","todos","todoList","map","Form","value","onChange","onCreate","onKeyPress","placeholder","Color","active","backgroundColor","Palette","colors","selected","onSelect","colorList","App","state","input","handleChange","setState","target","handleCreate","concat","alert","handleKeyPress","key","handleToggle","index","findIndex","todo","nextTodos","handleRomve","filter","handleSelect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAoBeA,EAjBU,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QACvC,OACI,uBAAMC,UAAU,qBAAhB,UACG,oBAAIC,MAAM,QAAV,wCACA,kCACKF,IAEJ,yBAASC,UAAU,eAAnB,SACKH,IAEL,yBAASG,UAAU,eAAnB,SACKF,QCXII,G,kKAMjB,WAEI,MAAuDC,KAAKC,MAArDC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,GAAIC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,SAAUC,EAA3C,EAA2CA,SAC3C,OACI,sBAAKV,UAAU,YAAYW,QAAU,kBAAKF,EAASF,IAAnD,UACI,wBAAQK,KAAK,SAASZ,UAAU,aAAaW,QAAS,SAACE,GACnDA,EAAEC,kBACFJ,EAASH,IAFb,kBAGA,qBAAKQ,MAAO,CAACP,SAAQR,UAAS,oBAAeM,GAAW,WAAxD,SAAqE,8BAAMD,MAJ/E,IAMQC,GAAY,qBAAKN,UAAU,aAAf,2B,GAhBMgB,cCCjBC,E,2KAGjB,SAAsBC,EAAWC,GAC7B,OAAOhB,KAAKC,MAAMgB,QAAUF,EAAUE,Q,oBAI1C,WAEI,MAA2CjB,KAAKC,MAAzCgB,EAAP,EAAOA,MAAOZ,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,SACzBW,EAAWD,EAAME,KACnB,gBAAEf,EAAF,EAAEA,GAAIF,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,QAAZ,OACI,cAAC,EAAD,CACCC,GAAIA,EACJF,KAAMA,EACNC,QAASA,EACTE,MAAOA,EACPC,SAAUA,EACVC,SAAUA,GACLH,MAad,OACI,8BACKc,Q,GAnCyBL,aCY3BO,G,KATF,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,WAAYnB,EAAW,EAAXA,MAClD,OACI,sBAAKR,UAAU,OAAf,UACI,uBAAOwB,MAAOA,EAAOC,SAAUA,EAAUE,WAAYA,EAAYC,YAAY,2DAAcb,MAAO,CAACP,WACnG,wBAAQR,UAAU,gBAAgBW,QAASe,EAA3C,+BCPNG,EAAQ,SAACrB,EAAOsB,EAAQnB,GAC1B,OAOI,aANA,CAMA,eAAI,wBAAQC,KAAK,SAASZ,UAAS,oBAAeQ,EAAMsB,QAAU,UAAYf,MAAO,CAACgB,gBAAgBvB,EAAMA,OAAQG,QAASH,EAAMG,QAA/H,6BAqBGqB,EAjBC,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAE1BC,EAAYH,EAAOX,KACrB,SAACd,GAAD,OAAY,cAAC,EAAD,CACZA,MAASA,EACTsB,OAAUI,IAAa1B,EACvBG,QAAS,kBAAKwB,EAAS3B,KAClBA,MAGT,OACI,oBAAIR,UAAU,oBAAd,SACKoC,KCrBPH,EAAS,CAAC,UAAW,UAAW,UAAW,WA6GlCI,E,4MAzGb9B,GAAG,E,EAEH+B,MAAM,CACJC,MAAO,GACPnB,MAAO,CACL,CAACb,GAAG,EAAGF,KAAK,kCAAUC,SAAQ,GAC9B,CAACC,GAAG,EAAGF,KAAK,kCAAUC,SAAQ,GAC9B,CAACC,GAAG,EAAGF,KAAK,kCAAUC,SAAQ,IAEhCE,MAAM,W,EAGRgC,aAAe,SAAC3B,GACd,EAAK4B,SAAS,CACZF,MAAM1B,EAAE6B,OAAOlB,S,EAInBmB,aAAe,WACb,MAA8B,EAAKL,MAA5BC,EAAP,EAAOA,MAAOnB,EAAd,EAAcA,MAAOZ,EAArB,EAAqBA,MAER,KAAV+B,EACH,EAAKE,SAAS,CACZF,MAAM,GACNnB,MAAMA,EAAMwB,OAAO,CACjBrC,GAAK,EAAKA,KACVF,KAAMkC,EACNjC,SAAU,IAEZE,UARiBqC,MAAM,4D,EAY3BC,eAAiB,SAACjC,GACH,UAAVA,EAAEkC,KACH,EAAKJ,gB,EAITK,aAAe,SAACzC,GACd,IAAOa,EAAS,EAAKkB,MAAdlB,MAED6B,EAAQ7B,EAAM8B,WAAU,SAAAC,GAAI,OAAIA,EAAK5C,KAAOA,KAC5C2B,EAAWd,EAAM6B,GAEjBG,EAAS,YAAOhC,GAGtBgC,EAAUH,GAAV,2BACKf,GADL,IAEE5B,SAAU4B,EAAS5B,UAGrB,EAAKmC,SAAS,CACZrB,MAAQgC,K,EAIZC,YAAc,SAAC9C,GACb,IAAOa,EAAS,EAAKkB,MAAdlB,MACP,EAAKqB,SAAS,CACZrB,MAAQA,EAAMkC,QAAO,SAAAH,GAAI,OAAIA,EAAK5C,KAAOA,Q,EAI7CgD,aAAe,SAAC/C,GACd,EAAKiC,SAAS,CACZjC,MAAQA,K,4CAIZ,WACE,MAA8BL,KAAKmC,MAA5BC,EAAP,EAAOA,MAAOnB,EAAd,EAAcA,MAAOZ,EAArB,EAAqBA,MAEnBgC,EAMErC,KANFqC,aACAG,EAKExC,KALFwC,aACAG,EAIE3C,KAJF2C,eACAE,EAGE7C,KAHF6C,aACAK,EAEElD,KAFFkD,YACAE,EACEpD,KADFoD,aAGF,OACE,cAAC,EAAD,CAAkB1D,KAClB,cAAC,EAAD,CACE2B,MAAOe,EACPZ,WAAYmB,EACZrB,SAAUe,EACVd,SAAUiB,EACVnC,MAAOA,IAENT,QACH,cAAC,EAAD,CACEkC,OAAQA,EACRC,SAAU1B,EACV2B,SAAUoB,IAZZ,SAeE,cAAC,EAAD,CAAcnC,MAAOA,EAAOZ,MAAOA,EAAOC,SAAUuC,EAActC,SAAU2C,U,GApGlErC,aCGHwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.841faae9.chunk.js","sourcesContent":["import React from 'react'\nimport './TodoListTemplate.css'\n\nconst TodoListTemplate = ({form, children, palette}) => {\n    return(\n        <main className=\"todo-list-template\">\n           <h1 class=\"title\">오늘 할 일</h1>   \n           <section>\n               {palette}\n           </section>\n            <section className=\"form-wrapper\">\n                {form}\n            </section>\n            <section className=\"todos-wrappr\">\n                {children}\n            </section>\n        </main>\n    )\n}\n\nexport default TodoListTemplate;","import React, { Component } from 'react'\nimport './TodoItem.css'\n\nexport default class TodoItem extends Component {\n      //성능 최적화 , 컴포넌트가 리렌더링을 할지 정해줌\n    //   shouldComponentUpdate(nextProps, nextState) {\n    //     return this.props.todos !== nextProps.todos;\n    // }\n\n    render() {\n        //text : todo내용, checked: 체크박스 상태, id:todo 고유아이디, onToggle:체크박스를 키고 끄는 함수, onRemove:아이템을 삭제시키는 함수\n        const {text, checked, id, color, onToggle, onRemove} = this.props;\n        return (\n            <div className=\"todo-item\" onClick={ ()=> onToggle(id)}>\n                <button type=\"button\" className=\"btn-remove\" onClick={(e)=> {\n                    e.stopPropagation(); //onToggle이 실행되지 않도록 함\n                    onRemove(id)}}>&times;</button>\n                <div style={{color}} className={`todo-text ${checked && 'checked'}`}><div>{text}</div></div> {/* \"todo-text\" + check && 'checked' 와 동일 */}\n                {\n                    checked && (<div className=\"check-mark\">✓</div>)\n                }\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport TodoItem from './TodoItem';\n\n//리스트를 렐더링 하게 될때는, 특히 보여주는 리스트가 동적인 경우엔 함수형이 아닌 클래스형 컴포넌트로 작성해야하는데, 클래스형 컴포넌트로 작성해야 나중에 컴포넌트 성능 최적화를 할 수 있기 때문이다.\nexport default class TodoItemList extends Component {\n\n    //성능 최적화 , 컴포넌트가 리렌더링을 할지 정해줌\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.todos !== nextProps.todos;\n    }\n    \n\n    render() {                                       \n        //todos:todo 객체들이 들어있는 배열, onToggle:체크박스를 키고 끄는 함수, onRemove : 아이켐을 삭제시키는 함수                           \n        const {todos, color, onToggle, onRemove} = this.props;\n        const todoList = todos.map(\n            ({id, text, checked}) => (\n                <TodoItem \n                 id={id} \n                 text={text} \n                 checked={checked} \n                 color={color}\n                 onToggle={onToggle}\n                 onRemove={onRemove}\n                 key={id}\n                />\n            )\n            //아래와 같은 형태여야 하지만, 함수의 파라미터부분에서 비구조화 할당을 하여 객체 내부의 값들을 따로 레퍼런스를 만들어 주었다.\n            // (todo) => (\n            //     <TodoItem\n            //     {...todo}\n            //     onToggle={onToggle}\n            //     onRemove={onRemove}\n            //     key={todo.id}\n            //     />\n            // )\n        )\n        return (    \n            <div>\n                {todoList}\n                {/* <TodoItem text=\"안녕\" />\n                <TodoItem text=\"리액트\" />\n                <TodoItem text=\"반가워\" /> */}\n            </div>\n        )\n    }\n}\n\n","import React from 'react'\nimport './Form.css'\n\n//value : 인풋의 내용\n//onCreate : 버튼이 클릭 될 때 실행 될 함수\n//onChage : 인풋 내용이 변경될 때 실행되는 함수\n//onKeyPress : 인풋에서 키를 입력할 때 실행되는 함수. 이함수는 나중에 Enter가 눌렸을 때 onCreate를 한것과 동일한 작업을 하기 위해서 사용합니다.\nconst Form = ({value, onChange, onCreate, onKeyPress, color}) => {\n    return (\n        <div className=\"form\">\n            <input value={value} onChange={onChange} onKeyPress={onKeyPress} placeholder=\"내용을 입력해주세요.\" style={{color}}/>\n            <button className=\"create-button\" onClick={onCreate}>추가</button>\n        </div>\n    )\n}\n\nexport default Form;\n","import React from 'react'\nimport './Form.css'\n\n\nconst Color = (color, active, onClick) =>{\n    return(\n        // <ul className=\"color-select-list\">\n        //     <li><button type=\"button\">색상1</button></li>\n        //     <li><button type=\"button\">색상2</button></li>\n        //     <li><button type=\"button\">색상3</button></li>\n        //     <li><button type=\"button\">색상4</button></li>\n        // </ul>\n        <li><button type=\"button\" className={`btn-color ${color.active && 'active'}`} style={{backgroundColor:color.color}} onClick={color.onClick}>색상</button></li>\n    )\n}\n\nconst Palette = ({colors, selected, onSelect}) => {\n  \n    const colorList = colors.map(\n        (color) => (<Color\n        color = {color}\n        active = {selected === color}\n        onClick={()=> onSelect(color)} \n        key={color}\n        />)\n    );\n    return (\n        <ul className=\"color-select-list\">\n            {colorList}\n        </ul>\n    )\n}\n\nexport default Palette;\n","import React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport TodoItemList from './components/TodoItemList';\nimport Form from './components/Form';\nimport Palette from './components/Palette';\nimport './index.css';\n\nconst colors = ['#343a40', '#f03e3e', '#12b886', '#228ae6'];\n\nclass App extends Component {\n\n  id=3 //이미 0,1,2가 존재하므로 3으로 설정\n\n  state={\n    input: '',\n    todos: [\n      {id:0, text:'리액트 공부', checked:false},\n      {id:1, text:'리액트 적용', checked:true},\n      {id:2, text:'리액트 소개', checked:false}\n    ],\n    color:'#343a40'\n  }\n\n  handleChange = (e) =>{\n    this.setState({\n      input:e.target.value\n    });\n  }\n\n  handleCreate = () =>{\n    const {input, todos, color} = this.state;\n    \n    if(input === '') { alert(\"내용을 입력해주세요\"); return}\n    this.setState({\n      input:'',\n      todos:todos.concat({\n        id : this.id++,\n        text: input,\n        checked : false,\n      }),\n      color\n    });\n  }\n\n  handleKeyPress = (e) =>{\n    if(e.key === 'Enter'){\n      this.handleCreate();\n    }\n  }\n\n  handleToggle = (id) =>{\n    const {todos} = this.state;\n    // 파라미터로 받은 id를 가지고 몇번째 아이템인지 찾습니다. \n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index]; //선택한 객체\n\n    const nextTodos = [...todos]; //배열복사\n    \n    //기존의 값들을 복사하고, checked값을 덮어쓰기\n    nextTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    };\n\n    this.setState({\n      todos : nextTodos\n    })\n  }\n\n  handleRomve = (id) => {\n    const {todos} = this.state;\n    this.setState({\n      todos : todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  handleSelect = (color) =>{\n    this.setState({\n      color : color\n    })\n  }\n\n  render(){\n    const {input, todos, color} = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRomve,\n      handleSelect\n    } = this;\n\n    return (\n      <TodoListTemplate form={(\n      <Form\n        value={input}\n        onKeyPress={handleKeyPress}\n        onChange={handleChange}\n        onCreate={handleCreate}\n        color={color}\n      />\n      )} palette= {(\n      <Palette\n        colors={colors}\n        selected={color}\n        onSelect={handleSelect}\n      />\n      )}>\n        <TodoItemList todos={todos} color={color} onToggle={handleToggle} onRemove={handleRomve}/>\n      </TodoListTemplate>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}